{"version":3,"sources":["webpack:///./src/client/pages/user.js","webpack:///./src/client/services/index.js","webpack:///./src/client/store/actions.js"],"names":["User","user","getInitialProps","props","useEffect","name","loadData","store","dispatch","getUser","mapStateToProps","state","mapDispatchToProps","connect","request","response","Promise","resolve","reject","setTimeout","getUserInfo","data","getTodoList","id","completed","content","initTodos","playlod","type","TODOS_TYPE_INIT","setUser","USER_TYPE_SET","getTodos","then","res"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,OAAyC;AAAA,MAAtCC,IAAsC,QAAtCA,IAAsC;AAAA,MAAhCC,eAAgC,QAAhCA,eAAgC;AAAA,MAAZC,KAAY;;AACpDC,yDAAS,CAAC,YAAM;AACd,QAAIH,IAAJ,EAAU;AACVC,mBAAe;AAChB,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,aAAS,EAAC;AAAf,kBACE,2DAAC,oDAAD,qBACE,iFADF,eAEE;AAAM,QAAI,EAAC,aAAX;AAAyB,WAAO,EAAC;AAAjC,IAFF,CADF,eAKE,+EAAUD,IAAI,IAAIA,IAAI,CAACI,IAAvB,MALF,CADF;AASD,CAfD;;AAiBAL,IAAI,CAACM,QAAL;AAAA,sEAAgB,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAeA,KAAK,CAACC,QAAN,CAAeC,+DAAO,EAAtB,CAAf;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAAA;AAAA;AAAA;AAAA;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAAEV,QAAI,EAAEU,KAAK,CAACV;AAAd,GAAL;AAAA,CAA7B;;AACA,IAAMW,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAJ,QAAQ,EAAI;AACrC,SAAO;AACLN,mBAAe,EAAE;AAAA,aAAMM,QAAQ,CAACC,+DAAO,EAAR,CAAd;AAAA;AADZ,GAAP;AAGD,CAJD;;AAKeI,0HAAO,CAACH,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,IAA7C,CAAf,E;;;;;;;;;;;;;;;;;;;;;;AC9BA,IAAMc,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAc;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,cAAU,CAAC;AAAA,aAAMF,OAAO,CAACF,QAAD,CAAb;AAAA,KAAD,EAA0B,GAA1B,CAAV;AACD,GAFM,CAAP;AAGD,CAJD;;AAMO,IAAMK,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMN,OAAO,CAAC;AAAEO,QAAI,EAAE;AAAEhB,UAAI,EAAE;AAAR;AAAR,GAAD,CAAb;AAAA,CAApB;AAEA,IAAMiB,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAMR,OAAO,CAAC;AAAEO,QAAI,EAAE,CAAC;AAAEE,QAAE,EAAE,CAAN;AAASC,eAAS,EAAE,IAApB;AAA0BC,aAAO,EAAE;AAAnC,KAAD;AAAR,GAAD,CAAb;AAAA,CAApB,C;;;;;;;;;;;;ACRP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,OAAO;AAAA,SAAK;AAAEC,QAAI,EAAEC,sDAAR;AAAyBF,WAAO,EAAPA;AAAzB,GAAL;AAAA,CAAzB;AACA,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAAH,OAAO;AAAA,SAAK;AAAEC,QAAI,EAAEG,oDAAR;AAAuBJ,WAAO,EAAPA;AAAvB,GAAL;AAAA,CAAvB;AAEA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAC5B,SAAO,UAAAxB,QAAQ,EAAI;AACjB,WAAOc,6DAAW,GAAGW,IAAd,CAAmB,UAAAC,GAAG;AAAA,aAAI1B,QAAQ,CAACkB,SAAS,CAACQ,GAAG,CAACb,IAAL,CAAV,CAAZ;AAAA,KAAtB,CAAP;AACD,GAFD;AAGD,CAJM;AAMA,IAAMZ,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,SAAO,UAAAD,QAAQ,EAAI;AACjB,WAAOY,6DAAW,GAAGa,IAAd,CAAmB,UAAAC,GAAG;AAAA,aAAI1B,QAAQ,CAACsB,OAAO,CAACI,GAAG,CAACb,IAAL,CAAR,CAAZ;AAAA,KAAtB,CAAP;AACD,GAFD;AAGD,CAJM,C","file":"2.client.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { getUser } from '../store/actions';\n\nconst User = ({ user, getInitialProps, ...props }) => {\n  useEffect(() => {\n    if (user) return;\n    getInitialProps();\n  }, []);\n\n  return (\n    <div className=\"user\">\n      <Helmet>\n        <title>User</title>\n        <meta name=\"description\" content=\"react ssr demo: user\" />\n      </Helmet>\n      <h1>Hi, { user && user.name } </h1>\n    </div>\n  );\n}\n\nUser.loadData = async store => store.dispatch(getUser());\n\nconst mapStateToProps = state => ({ user: state.user });\nconst mapDispatchToProps = dispatch => {\n  return {\n    getInitialProps: () => dispatch(getUser()),\n  }\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(User);\n","const request = (response) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(response), 100);\n  });\n}\n\nexport const getUserInfo = () => request({ data: { name: 'Jonh' } });\n\nexport const getTodoList = () => request({ data: [{ id: 1, completed: true, content: 'ssr' }] });\n","import { TODOS_TYPE_INIT, USER_TYPE_SET } from './types';\nimport { getTodoList, getUserInfo } from '../services';\n\nexport const initTodos = playlod => ({ type: TODOS_TYPE_INIT, playlod });\nexport const setUser = playlod => ({ type: USER_TYPE_SET, playlod });\n\nexport const getTodos = () => {\n  return dispatch => {\n    return getTodoList().then(res => dispatch(initTodos(res.data)));\n  }\n};\n\nexport const getUser = () => {\n  return dispatch => {\n    return getUserInfo().then(res => dispatch(setUser(res.data)));\n  }\n};\n"],"sourceRoot":""}